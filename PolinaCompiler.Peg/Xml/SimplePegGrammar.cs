//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Этот исходный код был создан с помощью xsd, версия=4.6.1055.0.
// 
namespace PolinaCompiler.Peg.Xml {
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SimplePegGrammar")]
    [System.Xml.Serialization.XmlRootAttribute("Grammar", Namespace="SimplePegGrammar", IsNullable=false)]
    public partial class GrammarType {
        
        private RuleType[] itemsField;
        
        private string startRuleField;
        
        private string skipRuleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Rule")]
        public RuleType[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string StartRule {
            get {
                return this.startRuleField;
            }
            set {
                this.startRuleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SkipRule {
            get {
                return this.skipRuleField;
            }
            set {
                this.skipRuleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SimplePegGrammar")]
    public partial class RuleType {
        
        private ExpressionType itemField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Alts", typeof(ExprAlternativesType))]
        [System.Xml.Serialization.XmlElementAttribute("Call", typeof(ExprCallType))]
        [System.Xml.Serialization.XmlElementAttribute("Chars", typeof(ExprCharsType))]
        [System.Xml.Serialization.XmlElementAttribute("Check", typeof(ExprCheckType))]
        [System.Xml.Serialization.XmlElementAttribute("CheckNot", typeof(ExprCheckNotType))]
        [System.Xml.Serialization.XmlElementAttribute("Number", typeof(ExprNumberType))]
        [System.Xml.Serialization.XmlElementAttribute("Regex", typeof(ExprPatternType))]
        [System.Xml.Serialization.XmlElementAttribute("Seq", typeof(ExprSequenceType))]
        public ExpressionType Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SimplePegGrammar")]
    public partial class ExprAlternativesType : ExprGroupType {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExprAlternativesType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExprSequenceType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SimplePegGrammar")]
    public abstract partial class ExprGroupType : ExpressionType {
        
        private ExpressionType[] itemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Alts", typeof(ExprAlternativesType))]
        [System.Xml.Serialization.XmlElementAttribute("Call", typeof(ExprCallType))]
        [System.Xml.Serialization.XmlElementAttribute("Chars", typeof(ExprCharsType))]
        [System.Xml.Serialization.XmlElementAttribute("Check", typeof(ExprCheckType))]
        [System.Xml.Serialization.XmlElementAttribute("CheckNot", typeof(ExprCheckNotType))]
        [System.Xml.Serialization.XmlElementAttribute("Number", typeof(ExprNumberType))]
        [System.Xml.Serialization.XmlElementAttribute("Regex", typeof(ExprPatternType))]
        [System.Xml.Serialization.XmlElementAttribute("Seq", typeof(ExprSequenceType))]
        public ExpressionType[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SimplePegGrammar")]
    public partial class ExprCallType : ExpressionType {
        
        private string ruleNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string RuleName {
            get {
                return this.ruleNameField;
            }
            set {
                this.ruleNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExprGroupType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExprAlternativesType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExprSequenceType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExprPatternType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExprCharsType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExprCallType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExprUnaryType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExprNumberType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExprCheckNotType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExprCheckType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SimplePegGrammar")]
    public abstract partial class ExpressionType {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SimplePegGrammar")]
    public partial class ExprPatternType : ExpressionType {
        
        private string patternField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Pattern {
            get {
                return this.patternField;
            }
            set {
                this.patternField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SimplePegGrammar")]
    public partial class ExprCharsType : ExpressionType {
        
        private string stringField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string String {
            get {
                return this.stringField;
            }
            set {
                this.stringField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExprNumberType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExprCheckNotType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExprCheckType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SimplePegGrammar")]
    public abstract partial class ExprUnaryType : ExpressionType {
        
        private ExpressionType itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Alts", typeof(ExprAlternativesType))]
        [System.Xml.Serialization.XmlElementAttribute("Call", typeof(ExprCallType))]
        [System.Xml.Serialization.XmlElementAttribute("Chars", typeof(ExprCharsType))]
        [System.Xml.Serialization.XmlElementAttribute("Check", typeof(ExprCheckType))]
        [System.Xml.Serialization.XmlElementAttribute("CheckNot", typeof(ExprCheckNotType))]
        [System.Xml.Serialization.XmlElementAttribute("Number", typeof(ExprNumberType))]
        [System.Xml.Serialization.XmlElementAttribute("Regex", typeof(ExprPatternType))]
        [System.Xml.Serialization.XmlElementAttribute("Seq", typeof(ExprSequenceType))]
        public ExpressionType Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SimplePegGrammar")]
    public partial class ExprCheckType : ExprUnaryType {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SimplePegGrammar")]
    public partial class ExprCheckNotType : ExprUnaryType {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SimplePegGrammar")]
    public partial class ExprNumberType : ExprUnaryType {
        
        private uint minField;
        
        private bool minFieldSpecified;
        
        private uint maxField;
        
        private bool maxFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint Min {
            get {
                return this.minField;
            }
            set {
                this.minField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinSpecified {
            get {
                return this.minFieldSpecified;
            }
            set {
                this.minFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint Max {
            get {
                return this.maxField;
            }
            set {
                this.maxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxSpecified {
            get {
                return this.maxFieldSpecified;
            }
            set {
                this.maxFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SimplePegGrammar")]
    public partial class ExprSequenceType : ExprGroupType {
    }
}
